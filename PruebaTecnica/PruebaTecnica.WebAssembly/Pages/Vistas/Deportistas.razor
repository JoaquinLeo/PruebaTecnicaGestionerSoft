@page "/"
@page "/Deportistas"

@inject IDeportistaServicio deportistaServicio
@inject IToastService toastService
@inject SweetAlertService SweetAlert

<div class="row justify-content-center  mt-3">
    <div class="col-sm-6 col-md-4 col-xl-3 mb-4">
        <div class="d-grid gap-1 col-12 mx-auto">
            <a class="btn btn-primary" href="/Deportista">Nuevo Deportista</a>
        </div>
    </div>
    <div class="col-sm-6 col-md-8 col-xl-9 mb-4">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Buscar deportista..." @bind-value="buscar">
            <button class="btn btn-outline-secondary" type="button" @onclick="(async()=> await ObtenerDeportistas(buscar))">
                <i class="oi oi-magnifying-glass"></i>
            </button>
        </div>
    </div>
</div>

<div class="row gx-4 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4 justify-content-start mt-2">


    @if (lista != null)
    {
        foreach (var item in lista)
        {
            <div class="col mb-5">
                <div class="card">
                    <img class="card-img-top border-dark border-1" src="@item.Imagen" height="250" width="120">
                    <div class="text-center">
                        <p class="m-1"><b>@item.Nombre @item.Apellido</b></p>
                    </div>
                    <div class="text-center">
                        <p class="m-1"><b>Nacionalidad @item.IdNacionalidadNavigation!.Nombre</b></p>
                    </div>
                    <div class="text-center">
                        <p class="m-1"><b>Deporte @item.IdDeporteNavigation!.Nombre</b></p>
                    </div>
                    <div class="text-center">
                        <p class="m-1"><b>Edad @item.Edad años</b></p>
                    </div>
                    <div class="text-center">
                        <p class="m-1"><b>Sexo @item.Sexo</b></p>
                    </div>
                </div>
                <div class="card-footer bg-transparent">
                    <div class="row justify-content-between">
                        <a class="col-5 btn btn-sm btn-outline-primary mt-auto" href="/deportista/@item.IdDeportista"><i class="oi oi-pencil fs-5"></i></a>
                        <button class="col-5 btn btn-sm btn-outline-danger mt-auto" type="button" @onclick="(async () => await Eliminar(item))">
                            <i class="oi oi-trash fs-5"></i>
                        </button>
                    </div>
                </div>
            </div>


        }
    }
    else
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }

</div>


@code {
    private List<DeportistaDTO>? lista = null;
    private string buscar = "";

    private async Task ObtenerDeportistas(string valor = "")
    {
        var respuesta = await deportistaServicio.Lista(valor);
        if (respuesta.EsCorrecto)
        {
            lista = (List<DeportistaDTO>)respuesta.Resultado!;
        }
        else
        {
            lista = new List<DeportistaDTO>();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await ObtenerDeportistas();
    }

    private async Task Eliminar(DeportistaDTO modelo)
    {
        SweetAlertResult result = await SweetAlert.FireAsync(new SweetAlertOptions
            {
                Title = "Esta seguro?",
                Text = $"Eliminar deportista: {modelo.Nombre} {modelo.Apellido}",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si, eliminar",
                CancelButtonText = "No, volver"
            });

        if (result.IsConfirmed)
        {
            var respuesta = await deportistaServicio.Eliminar(modelo.IdDeportista);
            if (respuesta.EsCorrecto)
            {
                await ObtenerDeportistas();
                toastService.ShowSuccess($"El deportista {modelo.Nombre} {modelo.Apellido} fue eliminado");
            }
            else
            {
                toastService.ShowWarning(respuesta.Mensaje!);
            }
        }
    }


}
